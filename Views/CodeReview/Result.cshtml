@{
    ViewBag.Title = "Code Review Results";
}
@using ReviewSharp.Models

@{
    var results = ViewBag.Results as List<CodeReviewResult> ?? new List<CodeReviewResult>();
    var code = ViewBag.Code as string ?? string.Empty;
    var lines = code.Replace("\r\n", "\n").Split('\n');
    var commentsByLine = results
        .Where(r => r.LineNumber.HasValue)
        .GroupBy(r => r.LineNumber.GetValueOrDefault())
        .ToDictionary(g => g.Key, g => g.ToList());

    var severityCounts = results
        .GroupBy(r => string.IsNullOrWhiteSpace(r.Severity) ? "Info" : r.Severity.Trim())
        .ToDictionary(g => g.Key, g => g.Count());
}

<div class="container-fluid py-4" style="max-width: 1400px; margin:auto;">

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-primary fw-bold">ðŸ“Š Code Review Results</h2>
        <a href="@Url.Action("Upload", "CodeReview")" class="btn btn-outline-primary rounded-pill px-4">
            Upload Another File
        </a>
    </div>

    <div class="row g-4">

        <!-- Source Code Panel -->
        <div class="col-lg-7">
            <div class="card shadow-lg rounded-4 border-0 bg-dark text-light">
                <div class="card-header bg-secondary text-light rounded-top-4">
                    <h5 class="mb-0 fw-semibold">ðŸ’» Source Code</h5>
                </div>
                <div class="card-body p-0" style="max-height: 80vh; overflow:auto; font-family:Consolas, 'Courier New', monospace;">
                    <table class="table table-sm table-borderless mb-0">
                        <thead class="sticky-top bg-dark">
                            <tr>
                                <th style="width:60px;" class="text-muted small text-end">Line</th>
                                <th class="text-muted small">Code</th>
                            </tr>
                        </thead>
                        <tbody>
                        @for (int i = 0; i < lines.Length; i++)
                        {
                            var lineNumber = i + 1;
                            var line = lines[i];
                            <tr>
                                <td class="text-end text-secondary pe-3 align-top">@lineNumber</td>
                                <td class="align-top">
                                    @{
                                        var encoded = System.Net.WebUtility.HtmlEncode(line);
                                        if (commentsByLine.ContainsKey(lineNumber))
                                        {
                                            var cmts = commentsByLine[lineNumber]
                                                .Select(c => ($"{(string.IsNullOrWhiteSpace(c.Severity) ? "" : c.Severity + ": ")}{c.Message}").Trim());
                                            var suffix = " // " + string.Join(" // ", cmts);
                                            @Html.Raw(encoded + $" <span style='color:#6A9955;'>{suffix}</span>")
                                        }
                                        else
                                        {
                                            @Html.Raw(encoded);
                                        }
                                    }
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Issues Panel -->
        <div class="col-lg-5">
            <div class="card shadow-lg rounded-4 border-0 bg-dark text-light">
                <div class="card-header bg-secondary text-light rounded-top-4 d-flex justify-content-between align-items-center">
                    <h5 class="mb-0 fw-semibold">âš  Issues</h5>
                    <span class="badge bg-info px-3 py-2">@results.Count Total</span>
                </div>
                <div class="card-body p-3">

                    <!-- Severity Summary -->
                    @if (results.Count > 0)
                    {
                        <table class="table table-sm table-borderless mb-4" style="background-color:rgb(196, 128, 128);">
                            <thead>
                                <tr class="text-muted small">
                                    <th>Severity</th>
                                    <th class="text-end">Count</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var kv in severityCounts.OrderByDescending(kv => kv.Value))
                                {
                                    <tr>
                                        <td>
                                            <span class="badge @(kv.Key == "Error" ? "bg-danger" : kv.Key == "Warning" ? "bg-warning text-dark" : "bg-info")">
                                                @kv.Key
                                            </span>
                                        </td>
                                        <td class="text-end fw-semibold">@kv.Value</td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                        <!-- Detailed Issues -->
                        <div style="max-height:55vh; overflow:auto;">
                            <table class="table table-hover table-dark table-sm align-middle">
                                <thead class="sticky-top bg-secondary text-light small">
                                    <tr>
                                        <th style="width:60px;" class="text-end">Line</th>
                                        <th style="width:90px;">Severity</th>
                                        <th style="width:120px;">Rule</th>
                                        <th>Message</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var result in results.OrderBy(r => r.LineNumber ?? int.MaxValue))
                                    {
                                        <tr>
                                            <td class="text-end text-secondary small">@result.LineNumber</td>
                                            <td>
                                                <span class="badge @(result.Severity == "Error" ? "bg-danger" : result.Severity == "Warning" ? "bg-warning text-dark" : "bg-info")">
                                                    @result.Severity
                                                </span>
                                            </td>
                                            <td class="text-light small">@result.RuleName</td>
                                            <td class="text-light">@result.Message</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-success rounded-3">
                            âœ… No issues found. Your code looks clean!
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
